package com.company;

import java.util.Arrays;

public class Main {

    public static double wielomian(double x, double y, double z, double v, double w) {
        return (Math.pow(x, 2) * (y + 2 - z)) / (v * (w * (-5)));
    }

    public static void main(String[] args) {
        double[] tab = new double[5];
        double[] tabTemp = new double[5];
        Arrays.fill(tabTemp, 1);
        Arrays.fill(tab, 1);

        double func1, func2, temp;
        double krok = 0.5;
        double v = 1.25;
        double e = 0.005;

        for (int j = 0; j < 5; j++) {
            for (int i = 0; i < tabTemp.length; i++) {
                do {
                    temp = tabTemp[i];
                    func1 = wielomian(tabTemp[0], tabTemp[1], tabTemp[2], tabTemp[3], tabTemp[4]);
                    tabTemp[i] = tabTemp[i] + krok;
                    func2 = wielomian(tabTemp[0], tabTemp[1], tabTemp[2], tabTemp[3], tabTemp[4]);
                    if (!(func2 < func1)) {
                        krok = krok / 2;
                        tabTemp[i] = temp;
                    } else break;
                    if (krok < e) {
                        krok = 0.5;
                        break;
                    }
                } while (krok > e);
            }
            krok = 0.5;
            for (int i = 0; i < tabTemp.length; i++) {
                do {
                    temp = tabTemp[i];
                    func1 = wielomian(tabTemp[0], tabTemp[1], tabTemp[2], tabTemp[3], tabTemp[4]);
                    tabTemp[i] = tabTemp[i] - krok;
                    func2 = wielomian(tabTemp[0], tabTemp[1], tabTemp[2], tabTemp[3], tabTemp[4]);
                    if (!(func2 < func1)) {
                        krok = krok / 2;
                        tabTemp[i] = temp;
                    } else break;
                    if (krok < e) {
                        krok = 0.5;
                        break;
                    }
                } while (krok > e);
            }

            System.arraycopy(tabTemp, 0, tab, 0, tab.length);

            do {
                for (int i = 0; i < tab.length; i++) {
                    tabTemp[i] = tab[i] * v;
                }
                func1 = wielomian(tab[0], tab[1], tab[2], tab[3], tab[4]);
                func2 = wielomian(tabTemp[0], tabTemp[1], tabTemp[2], tabTemp[3], tabTemp[4]);

                if (func2 < func1) {
                    break;
                }
                v = v / 2;
            } while (v > e);
            System.out.println("Wartość funkcji: " +func2);
        }
        System.out.println("\nOptymalne wartości dla najmniejszej funkcji: ");
        Arrays.stream(tabTemp).forEach(System.out::println);
    }
}
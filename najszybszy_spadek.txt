package com.company;

import java.util.Arrays;

public class Main {

    public static double pochodnaX(double x, double y, double z, double w) {
        return (4 * Math.pow(x, 3) * y) + Math.pow(w, 2);
    }

    public static double pochodnaY(double x, double y, double z, double w) {
        return Math.pow(x, 4);
    }

    public static double pochodnaZ(double x, double y, double z, double w) {
        return 3 * Math.pow(z, 2);
    }

    public static double pochodnaW(double x, double y, double z, double w) {
        return (2 * w) * x;
    }

    public static void main(String[] args) {
        double[] tab0 = new double[4];
        double[] tab = new double[4];
        double[] gradient = new double[4];
        Arrays.fill(tab0, 1);
        Arrays.fill(tab, 1);

        double krok = 0.6;
        double e = 0.02;
        double roznica;
        int counter = 1;

        for (int i = 0; i < 1000; i++) {
            gradient[0] = pochodnaX(tab0[0], tab0[1], tab0[2], tab0[3]);
            gradient[1] = pochodnaY(tab0[0], tab0[1], tab0[2], tab0[3]);
            gradient[2] = pochodnaZ(tab0[0], tab0[1], tab0[2], tab0[3]);
            gradient[3] = pochodnaW(tab0[0], tab0[1], tab0[2], tab0[3]);

            for (int j = 0; j < gradient.length; j++) {
                gradient[j] = gradient[j] * -1;
            }

            for (int k = 0; k < tab.length; k++) {
                tab[k] = tab0[k] + krok * gradient[k];
            }

            for (int l = 0; l < tab.length; l++) {
                roznica = Math.abs(tab[l] - tab0[l]);
                if (roznica < e) {
                    counter++;
                } else {
                    System.arraycopy(tab, 0, tab0, 0, tab0.length);
                    counter = 1;
                    break;
                }
            }
            if (counter == tab.length) {
                break;
            }
        }

        for (double v : tab) {
            System.out.println(v);
        }
    }
}
